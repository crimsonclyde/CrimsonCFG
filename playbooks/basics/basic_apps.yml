# CrimsonCFG-Name: Basic Applications
# CrimsonCFG-Description: Install basic system applications and utilities specified in local.yml variables.
# CrimsonCFG-Essential: true
# CrimsonCFG-Essential-Order: 3
---
- name: Install basic applications
  hosts: localhost
  become: true
  vars_files:
    - "{{ lookup('env', 'HOME') + '/.config/com.crimson.cfg/local.yml' }}"
  tasks:

    #######################
    # Install basic apt pkgs
    #######################

    - name: Check if APT package is installed
      ansible.builtin.shell: "dpkg -s {{ item }} | grep -q '^Status: install'"
      register: apt_installed
      ignore_errors: true
      changed_when: false
      loop: "{{ apt_packages }}"

    - name: Combine package names and install results
      ansible.builtin.set_fact:
        apt_pkg_status: "{{ apt_packages | zip(apt_installed.results) | list }}"

    - name: Install common APT packages
      ansible.builtin.apt:
        name: "{{ item.0 }}"
        state: present
      when: item.1.rc != 0
      loop: "{{ apt_pkg_status }}"

    #######################
    # Install basic snap pkgs
    #######################

    - name: Check if snap package is installed
      ansible.builtin.shell: "snap list {{ item }} | grep -w {{ item }}"
      register: snap_installed
      ignore_errors: true
      changed_when: false
      loop: "{{ snap_packages }}"

    - name: Combine snap package names and install results
      ansible.builtin.set_fact:
        snap_pkg_status: "{{ snap_packages | zip(snap_installed.results) | list }}"

    - name: Install Snap packages
      community.general.snap:
        name: "{{ item.0 }}"
        state: present
      when: item.1.rc != 0
      loop: "{{ snap_pkg_status }}"

    ## ----------------------------------------------------
    ## Pin App to GNOME dock
    ## ----------------------------------------------------
    - name: Ensure python3-psutil is installed for dconf module
      ansible.builtin.apt:
        name: python3-psutil
        state: present

    - name: Get current GNOME dock favorites
      community.general.dconf:
        key: /org/gnome/shell/favorite-apps
        state: read
      become: true
      become_user: "{{ user }}"
      environment:
        HOME: "{{ user_home }}"
      register: current_favorites

    - name: Normalize GNOME favorites value to a list
      ansible.builtin.set_fact:
        gnome_favorites_list: >-
          {{
            (current_favorites.value
              | default([])
              | from_yaml
              if (current_favorites.value is string)
              else (current_favorites.value | default([]) | list)
            )
          }}

    - name: Pin app to GNOME dock favorites
      community.general.dconf:
        key: /org/gnome/shell/favorite-apps
        value: >-
          {{
            (gnome_favorites_list +
              ([app_desktop_file] if app_desktop_file not in gnome_favorites_list else [])
            ) | to_json
          }}
        state: present
      become: true
      become_user: "{{ user }}"
      environment:
        HOME: "{{ user_home }}"
      vars:
        app_desktop_file: "bitwarden_bitwarden.desktop"
      when: app_desktop_file not in gnome_favorites_list
