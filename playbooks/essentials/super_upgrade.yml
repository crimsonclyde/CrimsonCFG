# CrimsonCFG-Name: Super Upgrade Function
# CrimsonCFG-Description: Ultimate one-stop-shop for updates - all at once magic: apt/snaps!
# CrimsonCFG-Essential: true
# CrimsonCFG-Required: false
# CrimsonCFG-Essential-Order: 6
---
- name: Add Super Upgrade Function
  hosts: all
  become: true
  vars:
    super_upgrade_log_dir: /var/log/CrimsonCFG/super-upgrade
  vars_files:
    - "{{ lookup('env', 'HOME') + '/.config/com.crimson.cfg/local.yml' }}"

  tasks:

    #######################
    # Create log directory and set permissions
    #######################

    - name: Create log directory for super-upgrade
      ansible.builtin.file:
        path: "{{ super_upgrade_log_dir }}"
        state: directory
        mode: '0755'
        owner: root
        group: root

    - name: Set log directory permissions to allow user write access
      ansible.builtin.file:
        path: "{{ super_upgrade_log_dir }}"
        mode: '0775'
        owner: root
        group: "{{ user }}"

    #######################
    # Create Wazuh monitoring directory and timestamp file
    #######################

    - name: Create Wazuh monitoring directory
      ansible.builtin.file:
        path: /var/log/CrimsonCFG
        state: directory
        mode: '0755'
        owner: root
        group: root

    - name: Create initial system update timestamp file for Wazuh
      ansible.builtin.copy:
        dest: /var/log/CrimsonCFG/system-last-updated
        content: "{{ ansible_date_time.iso8601 }}"
        mode: '0644'
        owner: root
        group: root

    #######################
    # Configure logrotate for super-upgrade logs
    #######################

    - name: Create logrotate configuration for super-upgrade
      ansible.builtin.copy:
        dest: /etc/logrotate.d/super-upgrade
        content: |
          {{ super_upgrade_log_dir }}/*.log {
              daily
              rotate 30
              compress
              delaycompress
              missingok
              notifempty
              create 644 root root
              postrotate
                  # Optional: You can add post-rotation commands here
                  # echo "Log rotated at $(date)" >> {{ super_upgrade_log_dir }}/rotation.log
              endscript
          }
        mode: '0644'
        owner: root
        group: root

    #######################
    # Check which shell config file to use
    #######################

    - name: Check if .zshrc exists
      ansible.builtin.stat:
        path: "{{ user_home }}/.zshrc"
      register: zshrc_exists

    - name: Set shell config file path
      ansible.builtin.set_fact:
        shell_config_file: "{{ user_home }}/.zshrc"
      when: zshrc_exists.stat.exists

    - name: Set shell config file path to .bashrc if .zshrc doesn't exist
      ansible.builtin.set_fact:
        shell_config_file: "{{ user_home }}/.bashrc"
      when: not zshrc_exists.stat.exists

    #######################
    # Create super-upgrade script from template
    #######################

    - name: Create super-upgrade script directory
      ansible.builtin.file:
        path: "{{ user_home }}/.local/bin"
        state: directory
        mode: '0755'
        owner: "{{ user }}"
        group: "{{ user }}"

    - name: Create super-upgrade script from template
      ansible.builtin.template:
        src: "{{ templates_directory }}/super-upgrade.sh.j2"
        dest: "{{ user_home }}/.local/bin/super-upgrade.sh"
        mode: '0755'
        owner: "{{ user }}"
        group: "{{ user }}"
        backup: yes

    #######################
    # Add super-upgrade script to appropriate shell config
    #######################

    - name: Check if super-upgrade script is already sourced in shell config
      ansible.builtin.shell: grep -q "super-upgrade.sh" "{{ shell_config_file }}"
      register: super_upgrade_sourced
      failed_when: false
      changed_when: false

    - name: Add super-upgrade script source to shell config
      become: false
      ansible.builtin.lineinfile:
        path: "{{ shell_config_file }}"
        line: |
          # CrimsonCFG Super Upgrade Script
          if [ -f "{{ user_home }}/.local/bin/super-upgrade.sh" ]; then
            source "{{ user_home }}/.local/bin/super-upgrade.sh"
          fi
        insertafter: EOF
        state: present
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '0644'
      when: super_upgrade_sourced.rc != 0

    - name: Display success message for .zshrc
      ansible.builtin.debug:
        msg: "Super-upgrade script has been created and sourced in .zshrc. Use 'super-upgrade' command in your terminal. Logs are stored in {{ super_upgrade_log_dir }}/"
      when: super_upgrade_sourced.rc != 0 and zshrc_exists.stat.exists

    - name: Display success message for .bashrc
      ansible.builtin.debug:
        msg: "Super-upgrade script has been created and sourced in .bashrc. Use 'super-upgrade' command in your terminal. Logs are stored in {{ super_upgrade_log_dir }}/"
      when: super_upgrade_sourced.rc != 0 and not zshrc_exists.stat.exists
