# CrimsonCFG-Name: Tailscale Client
# CrimsonCFG-Description: Install and configure Tailscale client with Microsoft 365 authentication and automatic tagging
# CrimsonCFG-Essential: true
# CrimsonCFG-Essential-Order: 5
---
- name: Install and configure Tailscale client with Azure CLI and automatic tagging
  hosts: localhost
  become: true
  vars_files:
    - "{{ lookup('env', 'HOME') + '/.config/com.crimson.cfg/local.yml' }}"
  tasks:

    #######################
    # Install Azure CLI
    #######################

    - name: Install Azure CLI
      shell: |
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
      args:
        creates: /usr/bin/az
      register: azure_cli_install

    - name: Display Azure CLI installation result
      debug:
        msg: "Azure CLI installation: {{ azure_cli_install.stdout_lines | default('No output') }}"

    #######################
    # Install Tailscale
    #######################

    - name: Download Tailscale GPG Key
      ansible.builtin.uri:
        dest: /usr/share/keyrings/tailscale-archive-keyring.gpg
        url: https://pkgs.tailscale.com/stable/ubuntu/noble.noarmor.gpg

    - name: Add Tailscale repository
      ansible.builtin.uri:
        dest: /etc/apt/sources.list.d/tailscale.list
        url: https://pkgs.tailscale.com/stable/ubuntu/noble.tailscale-keyring.list

    - name: Install Tailscale
      ansible.builtin.apt:
        name: tailscale
        update_cache: true
        state: present

    #######################
    # Configure Tailscale as System Service
    #######################

    - name: Start and enable Tailscale service
      systemd:
        name: tailscaled
        state: started
        enabled: yes

    - name: Wait for Tailscale service to be ready
      wait_for:
        timeout: 10

    #######################
    # Get User Information for Authentication
    #######################

    - name: Get current user information
      set_fact:
        current_user: "{{ lookup('pipe', 'ls /home | head -n 1') }}"
        user_display: "{{ lookup('pipe', 'sudo -u ' + lookup('pipe', 'ls /home | head -n 1') + ' bash -c \"echo $DISPLAY\"') }}"
        user_id: "{{ lookup('pipe', 'id -u ' + lookup('pipe', 'ls /home | head -n 1')) }}"

    - name: Set fallback display if empty
      set_fact:
        user_display: ":0"
      when: user_display == ""

    #######################
    # Final Status Display
    #######################

    - name: Display final status
      shell: |
        sudo -u "{{ current_user }}" \
          DISPLAY="{{ user_display }}" \
          XDG_RUNTIME_DIR=/run/user/"{{ user_id }}" \
          zenity --info \
          --title="Tailscale Installation Complete" \
          --timeout=15 \
          --text="Tailscale installation and configuration completed successfully!\n\nDevice Information:\n- User: {{ user_display_name }}\n- Department: {{ user_department }}\n- Tags: user-endpoint, {{ user_department | lower }}\n\nYour device is now connected to the Tailscale network with appropriate tags for management and access control." \
          --width=500 \
          --height=400
      register: final_status_result
      changed_when: final_status_result.rc == 0
      failed_when: final_status_result.rc != 0 and final_status_result.rc != 5
